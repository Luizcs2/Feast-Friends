version: '3.8'

services:
  # üóÑÔ∏è PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: feast-friends-db
    environment:
      POSTGRES_DB: feast_friends_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üì° Redis Cache
  redis:
    image: redis:7-alpine
    container_name: feast-friends-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # üöÄ API Service
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    container_name: feast-friends-api
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/feast_friends_dev?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    env_file:
      - configs/.env.development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/bin  # Exclude bin directory
    command: ["go", "run", "cmd/server/main.go"]

volumes:
  postgres_data: